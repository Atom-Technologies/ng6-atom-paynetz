{"version":3,"file":"ng6-atom-paynetz.umd.js.map","sources":["ng://ng6-atom-paynetz/lib/ProcessPayment/ProcessPayment.component.ts","ng://ng6-atom-paynetz/lib/ng6-atom-paynetz.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport * as hash from 'js-sha512';\n\n@Component({\n  selector: 'lib-config',\n  template: `<p>\n  config works!\n</p>\n`,\n  styles: [``]\n})\n\nexport class ProcessPaymentComponent implements OnInit {\n\n  private loginId: any;\n  private password: any;\n  private url: any;\n  private clientCode: any;\n  private requestHashKey: any;\n  private responseHashKey: any;\n  private prodid: any;\n  private signature: any;\n  private amt: any;\n  private txncurr: any;\n  private txntype: any;\n  private txnscamt: any;\n  private txnid: any;\n  private custacc: any;\n  private returnURL: any;\n  private udf1: any;\n  private udf2: any;\n  private udf3: any;\n  private udf4: any;\n  private childWindow: any;\n  private response: any;\n  constructor() {\n  }\n\n\n  ngOnInit() {\n  }\n\n  setLoginid(login: string) {\n    this.loginId = login;\n  }\n\n  setPassword(password: string) {\n    this.password = password;\n  }\n\n  setURL(url: string) {\n    this.url = url;\n  }\n\n  setClientCode(clientCode: string) {\n    this.clientCode = clientCode;\n  }\n\n  setRequestHaskKey(requestHashKey: string) {\n    this.requestHashKey = requestHashKey;\n  }\n\n  setResponseHashKey(responseHashKey: string) {\n    this.responseHashKey = responseHashKey;\n  }\n\n  setProdId(prodid: string) {\n    this.prodid = prodid;\n  }\n\n  setTxnId(txnid: string) {\n    this.txnid = txnid;\n  }\n\n  setCustAcc(custacc: string) {\n    this.custacc = custacc;\n  }\n\n  setAmount(amt: string) {\n    this.amt = amt;\n  }\n\n  setCurrency(txncurr: string) {\n    this.txncurr = txncurr;\n  }\n\n  setTxnType(txntype: string) {\n    this.txntype = txntype;\n  }\n\n  setReturnUrl(returnURL: string) {\n    this.returnURL = 'https://www.atomtech.in/angular-kit-handle/params_response.php';\n  }\n\n  setTxnsCamt(txnscamt: string) {\n    this.txnscamt = txnscamt;\n  }\n\n  setCustomerName(udf1: string) {\n    this.udf1 = udf1;\n  }\n\n  setCustomerEmail(udf2: string) {\n    this.udf2 = udf2;\n  }\n\n  setCustomerMobile(udf3: string) {\n    this.udf3 = udf3;\n  }\n\n  setCustomerAddress(udf4: string) {\n    this.udf4 = udf4;\n  }\n\n  generateChecksum() {\n    this.signature = this.loginId + this.password + this.txntype + this.prodid + this.txnid + this.amt + this.txncurr;\n    return hash.sha512.hmac(this.requestHashKey, this.signature);\n  }\n\n\n\n  payNow() {\n\n    let urlToPay = this.url;\n    urlToPay += '?login=' + this.loginId;\n    urlToPay += '&pass=' + this.password;\n    urlToPay += '&ttype=' + this.txntype;\n    urlToPay += '&prodid=' + this.prodid;\n    urlToPay += '&amt=' + this.amt;\n    urlToPay += '&txncurr=' + this.txncurr;\n    urlToPay += '&txnscamt=' + this.txnscamt;\n    urlToPay += '&clientcode=' + btoa(this.clientCode);\n    urlToPay += '&txnid=' + this.txnid;\n    urlToPay += '&date=' + this.formatDate(new Date);\n    urlToPay += '&custacc=' + this.custacc;\n    urlToPay += '&ru=' + this.returnURL;\n    urlToPay += '&signature=' + this.generateChecksum();\n    urlToPay += '&udf1=' + this.udf1;\n    urlToPay += '&udf2=' + this.udf2;\n    urlToPay += '&udf3=' + this.udf3;\n    urlToPay += '&udf4=' + this.udf4;\n    const url = encodeURI(urlToPay);\n    let res = null;\n\n    const left = (window.screen.width / 2) - ((1200 / 2) + 10);\n    const top = (window.screen.height / 2) - ((850 / 2) + 10);\n\n    const childWindow = window.open(url, 'Atom Paynetz', 'status=no,height=600,width=1200,resizable=yes,left='\n      + left + ',top=' + top + ',screenX=' + left + ',screenY='\n      + top + ',toolbar=no,menubar=no,scrollbars=no,location=no,directories=no');\n\n    const promise = new Promise(resolve => {\n      window.addEventListener('message', function (e) {\n        if (e.origin === 'https://www.atomtech.in') {\n          res = e.data;\n          childWindow.close();\n        }\n      }, false);\n      const intervalID = window.setInterval(checkWindow, 500);\n      function checkWindow(e: any) {\n        if (childWindow && childWindow.closed) {\n          if (res) {\n            this.response = res;\n            window.clearInterval(intervalID);\n            resolve({\n              status: true,\n              data: res,\n            });\n          } else {\n            window.clearInterval(intervalID);\n            window.clearInterval(intervalID);\n            resolve({\n              status: false,\n              data: 'payment not completed',\n            });\n          }\n\n        }\n      }\n    });\n\n    return promise;\n\n  }\n\n  validateResponse(mmp_txn: any, mer_txn: any, f_code: any, prod: any, discriminator: any, amt: any, bank_txn: any, signature: any) {\n    const string_verify = mmp_txn + mer_txn + f_code + prod + discriminator + amt + bank_txn;\n    const sig = hash.sha512.hmac(this.responseHashKey, string_verify);\n\n    if (signature === sig) {\n      return {\n        'status': true,\n        'message': 'Signature matched = ' + sig + ' = ' + this.responseHashKey\n      };\n    } else {\n      return {\n        'status': false,\n        'message': 'Signature mismatched = ' + sig + ' = ' + this.responseHashKey\n      };\n    }\n  }\n\n  formatDate(date: any) {\n    const day = date.getDate();\n    let monthIndex = date.getMonth() + 1;\n    const year = date.getFullYear();\n    const second = date.getSeconds();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    if (monthIndex < 10) {\n      monthIndex = '0' + monthIndex;\n    }\n    return day + '/' + Number(monthIndex) + '/' + year + ' ' + hours + ':' + minutes + ':' + second;\n  }\n\n}\n","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { ProcessPaymentComponent } from './ProcessPayment/ProcessPayment.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n  ],\n  declarations: [ProcessPaymentComponent],\n  exports: []\n})\n\nexport class Ng6AtomPaynetzModule { }\n"],"names":["hash.sha512","Component","NgModule","BrowserModule"],"mappings":"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"}
