{"version":3,"file":"ng6-atom-paynetz.js.map","sources":["ng://ng6-atom-paynetz/lib/ProcessPayment/ProcessPayment.component.ts","ng://ng6-atom-paynetz/lib/ng6-atom-paynetz.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport * as hash from 'js-sha512';\n\n@Component({\n  selector: 'lib-config',\n  template: `<p>\n  config works!\n</p>\n`,\n  styles: [``]\n})\n\nexport class ProcessPaymentComponent implements OnInit {\n\n  private loginId: any;\n  private password: any;\n  private url: any;\n  private clientCode: any;\n  private requestHashKey: any;\n  private responseHashKey: any;\n  private prodid: any;\n  private signature: any;\n  private amt: any;\n  private txncurr: any;\n  private txntype: any;\n  private txnscamt: any;\n  private txnid: any;\n  private custacc: any;\n  private returnURL: any;\n  private udf1: any;\n  private udf2: any;\n  private udf3: any;\n  private udf4: any;\n  private childWindow: any;\n  private response: any;\n  constructor() {\n  }\n\n\n  ngOnInit() {\n  }\n\n  setLoginid(login: string) {\n    this.loginId = login;\n  }\n\n  setPassword(password: string) {\n    this.password = password;\n  }\n\n  setURL(url: string) {\n    this.url = url;\n  }\n\n  setClientCode(clientCode: string) {\n    this.clientCode = clientCode;\n  }\n\n  setRequestHaskKey(requestHashKey: string) {\n    this.requestHashKey = requestHashKey;\n  }\n\n  setResponseHashKey(responseHashKey: string) {\n    this.responseHashKey = responseHashKey;\n  }\n\n  setProdId(prodid: string) {\n    this.prodid = prodid;\n  }\n\n  setTxnId(txnid: string) {\n    this.txnid = txnid;\n  }\n\n  setCustAcc(custacc: string) {\n    this.custacc = custacc;\n  }\n\n  setAmount(amt: string) {\n    this.amt = amt;\n  }\n\n  setCurrency(txncurr: string) {\n    this.txncurr = txncurr;\n  }\n\n  setTxnType(txntype: string) {\n    this.txntype = txntype;\n  }\n\n  setReturnUrl(returnURL: string) {\n    this.returnURL = 'https://www.atomtech.in/angular-kit-handle/params_response.php';\n  }\n\n  setTxnsCamt(txnscamt: string) {\n    this.txnscamt = txnscamt;\n  }\n\n  setCustomerName(udf1: string) {\n    this.udf1 = udf1;\n  }\n\n  setCustomerEmail(udf2: string) {\n    this.udf2 = udf2;\n  }\n\n  setCustomerMobile(udf3: string) {\n    this.udf3 = udf3;\n  }\n\n  setCustomerAddress(udf4: string) {\n    this.udf4 = udf4;\n  }\n\n  generateChecksum() {\n    this.signature = this.loginId + this.password + this.txntype + this.prodid + this.txnid + this.amt + this.txncurr;\n    return hash.sha512.hmac(this.requestHashKey, this.signature);\n  }\n\n\n\n  payNow() {\n\n    let urlToPay = this.url;\n    urlToPay += '?login=' + this.loginId;\n    urlToPay += '&pass=' + this.password;\n    urlToPay += '&ttype=' + this.txntype;\n    urlToPay += '&prodid=' + this.prodid;\n    urlToPay += '&amt=' + this.amt;\n    urlToPay += '&txncurr=' + this.txncurr;\n    urlToPay += '&txnscamt=' + this.txnscamt;\n    urlToPay += '&clientcode=' + btoa(this.clientCode);\n    urlToPay += '&txnid=' + this.txnid;\n    urlToPay += '&date=' + this.formatDate(new Date);\n    urlToPay += '&custacc=' + this.custacc;\n    urlToPay += '&ru=' + this.returnURL;\n    urlToPay += '&signature=' + this.generateChecksum();\n    urlToPay += '&udf1=' + this.udf1;\n    urlToPay += '&udf2=' + this.udf2;\n    urlToPay += '&udf3=' + this.udf3;\n    urlToPay += '&udf4=' + this.udf4;\n    const url = encodeURI(urlToPay);\n    let res = null;\n\n    const left = (window.screen.width / 2) - ((1200 / 2) + 10);\n    const top = (window.screen.height / 2) - ((850 / 2) + 10);\n\n    const childWindow = window.open(url, 'Atom Paynetz', 'status=no,height=600,width=1200,resizable=yes,left='\n      + left + ',top=' + top + ',screenX=' + left + ',screenY='\n      + top + ',toolbar=no,menubar=no,scrollbars=no,location=no,directories=no');\n\n    const promise = new Promise(resolve => {\n      window.addEventListener('message', function (e) {\n        if (e.origin === 'https://www.atomtech.in') {\n          res = e.data;\n          childWindow.close();\n        }\n      }, false);\n      const intervalID = window.setInterval(checkWindow, 500);\n      function checkWindow(e: any) {\n        if (childWindow && childWindow.closed) {\n          if (res) {\n            this.response = res;\n            window.clearInterval(intervalID);\n            resolve({\n              status: true,\n              data: res,\n            });\n          } else {\n            window.clearInterval(intervalID);\n            window.clearInterval(intervalID);\n            resolve({\n              status: false,\n              data: 'payment not completed',\n            });\n          }\n\n        }\n      }\n    });\n\n    return promise;\n\n  }\n\n  validateResponse(mmp_txn: any, mer_txn: any, f_code: any, prod: any, discriminator: any, amt: any, bank_txn: any, signature: any) {\n    const string_verify = mmp_txn + mer_txn + f_code + prod + discriminator + amt + bank_txn;\n    const sig = hash.sha512.hmac(this.responseHashKey, string_verify);\n\n    if (signature === sig) {\n      return {\n        'status': true,\n        'message': 'Signature matched = ' + sig + ' = ' + this.responseHashKey\n      };\n    } else {\n      return {\n        'status': false,\n        'message': 'Signature mismatched = ' + sig + ' = ' + this.responseHashKey\n      };\n    }\n  }\n\n  formatDate(date: any) {\n    const day = date.getDate();\n    let monthIndex = date.getMonth() + 1;\n    const year = date.getFullYear();\n    const second = date.getSeconds();\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    if (monthIndex < 10) {\n      monthIndex = '0' + monthIndex;\n    }\n    return day + '/' + Number(monthIndex) + '/' + year + ' ' + hours + ':' + minutes + ':' + second;\n  }\n\n}\n","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { ProcessPaymentComponent } from './ProcessPayment/ProcessPayment.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n  ],\n  declarations: [ProcessPaymentComponent],\n  exports: []\n})\n\nexport class Ng6AtomPaynetzModule { }\n"],"names":["hash.sha512"],"mappings":"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"}
